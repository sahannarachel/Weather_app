{"ast":null,"code":"var _jsxFileName = \"/Users/john/weather-app/src/components/forecast.js\";\nimport React from 'react';\nimport './forecast.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forecast = ({\n  data\n}) => {\n  const dailyForecasts = data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"7-Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-grid\",\n      children: dailyForecasts.map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: new Date(forecast.dt_txt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", forecast.main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Weather: \", forecast.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity: \", forecast.main.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed: \", forecast.wind.speed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Forecast","data","dailyForecasts","list","filter","reading","dt_txt","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","forecast","index","Date","toLocaleDateString","main","temp","weather","description","humidity","wind","speed","_c","$RefreshReg$"],"sources":["/Users/john/weather-app/src/components/forecast.js"],"sourcesContent":["import React from 'react';\nimport './forecast.css'; // Import the CSS file for styling\n\nconst Forecast = ({ data }) => {\n  const dailyForecasts = data.list.filter((reading) =>\n    reading.dt_txt.includes(\"12:00:00\")\n  );\n\n  return (\n    <div className=\"forecast-container\">\n      <h2>7-Day Forecast</h2>\n      <div className=\"forecast-grid\">\n        {dailyForecasts.map((forecast, index) => (\n          <div key={index} className=\"forecast-item\">\n            <h3>{new Date(forecast.dt_txt).toLocaleDateString()}</h3>\n            <p>Temperature: {forecast.main.temp}Â°C</p>\n            <p>Weather: {forecast.weather[0].description}</p>\n            <p>Humidity: {forecast.main.humidity}%</p>\n            <p>Wind Speed: {forecast.wind.speed} m/s</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Forecast;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,MAAMC,cAAc,GAAGD,IAAI,CAACE,IAAI,CAACC,MAAM,CAAEC,OAAO,IAC9CA,OAAO,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,CACpC,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBd,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BP,cAAc,CAACY,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAClCjB,OAAA;QAAiBS,SAAS,EAAC,eAAe;QAAAC,QAAA,gBACxCV,OAAA;UAAAU,QAAA,EAAK,IAAIQ,IAAI,CAACF,QAAQ,CAACT,MAAM,CAAC,CAACY,kBAAkB,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzDd,OAAA;UAAAU,QAAA,GAAG,eAAa,EAACM,QAAQ,CAACI,IAAI,CAACC,IAAI,EAAC,OAAE;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1Cd,OAAA;UAAAU,QAAA,GAAG,WAAS,EAACM,QAAQ,CAACM,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDd,OAAA;UAAAU,QAAA,GAAG,YAAU,EAACM,QAAQ,CAACI,IAAI,CAACI,QAAQ,EAAC,GAAC;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1Cd,OAAA;UAAAU,QAAA,GAAG,cAAY,EAACM,QAAQ,CAACS,IAAI,CAACC,KAAK,EAAC,MAAI;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GALpCG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACa,EAAA,GArBI1B,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}